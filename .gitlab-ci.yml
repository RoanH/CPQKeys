image: openjdk:8

variables:
  NAME: "${CI_PROJECT_NAME}-${CI_PIPELINE_ID}-${CI_BUILD_REF_NAME}"
  PROJECTNAME: CPQKeys

before_script:
  - chmod -R 755 ./*
  - cd ${PROJECTNAME}
  - ls -l

stages:
  - check
  - compile
  - status
  - javadoc

endings:
  allow_failure: true
  script: curl ${SERVER}ci/lf.sh | bash
  stage: check

pending:
  allow_failure: true
  script: curl ${SERVER}ci/pending.sh | bash
  stage: compile

success:
  allow_failure: true
  script: curl ${SERVER}ci/success.sh | bash
  when: on_success
  stage: status

failure:
  allow_failure: true
  script: curl ${SERVER}ci/failure.sh | bash
  when: on_failure
  stage: status

nishe:
  stage: compile
  script:
    - apt-get update && apt-get -y install gcc g++ cmake
    - cd bindings/nishe
    - ./build.sh
  artifacts:
    name: "Nishe Linux Library"
    expire_in: 1 week
    paths:
      - ${PROJECTNAME}/native/*nishe.*

nauty_traces:
  stage: compile
  script:
    - apt-get update && apt-get -y install gcc cmake
    - cd bindings/nauty_traces
    - ./build.sh
  artifacts:
    name: "Nauty Traces Linux Library"
    expire_in: 1 week
    paths:
      - ${PROJECTNAME}/native/*nauty.*
      - ${PROJECTNAME}/native/*ntcore.*
      - ${PROJECTNAME}/native/*traces.*

bliss:
  stage: compile
  script:
    - apt-get update && apt-get -y install gcc g++ cmake
    - cd bindings/bliss
    - ./build.sh
  artifacts:
    name: "Bliss Linux Library"
    expire_in: 1 week
    paths:
      - ${PROJECTNAME}/native/*bliss.*

verify:
  allow_failure: true
  script: curl ${SERVER}ci/javadoc.sh | bash
  stage: javadoc
  coverage: '/\([0-9]{2,3}\.[0-9]{2}%\)/'

javadoc:
  script:
    - mkdir ../javadoc
    - ./gradlew -PnexusPublic=${NEXUS_PUBLIC} :javadoc
    - mv ./build/docs/javadoc/* ../javadoc/
  stage: javadoc
  artifacts:
    name: "${NAME} [Javadoc]"
    expire_in: 1 week
    paths:
      - javadoc/

compile:
  script:
    - ./gradlew -PnexusPublic=${NEXUS_PUBLIC} shadowJar
    - mv ./build/libs/* ../
  stage: compile
  artifacts:
    name: "${NAME}"
    expire_in: 1 week
    paths:
      - ${PROJECTNAME}-*.jar

#docker:
#  image: docker:latest
#  variables:
#    DOCKER_DRIVER: overlay2
#    DOCKER_TLS_CERTDIR: ""
#  tags:
#    - docker
#  services:
#    - docker:dind
#  before_script:
#    - apt-get update && apt-get -y install ssh
#    - git submodule update --init --recursive
#  script:
#    - docker info
#    - docker build -t cpqkeys .
#  stage: compile
